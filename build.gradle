// Top-level build file where you can add configuration options common to all sub-projects/modules.
apply plugin: "com.github.ben-manes.versions"
apply plugin: "org.jlleitschuh.gradle.ktlint"

buildscript {
    ext {
        projectMinSdk = 23
        projectTargetSdk = 31
        projectCompileSdk = 33
    }
    repositories {
        google()
        mavenCentral()
        gradlePluginPortal()
        maven { url "https://plugins.gradle.org/m2/" }
        maven { url 'https://www.jetbrains.com/intellij-repository/releases' }
        maven { url "https://jetbrains.bintray.com/intellij-third-party-dependencies" }
    }
    dependencies {
        classpath files(libs.class.superclass.protectionDomain.codeSource.location)
        classpath libs.buildTools
        classpath libs.plugin.hilt
        classpath libs.plugin.kotlin
        classpath libs.plugin.ktlint
        classpath libs.plugin.protobuf
        classpath libs.plugin.sqlDelight
        classpath libs.plugin.versionCheck

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

subprojects {
    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
        kotlinOptions {
            freeCompilerArgs += '-Xopt-in=kotlin.RequiresOptIn'
        }
    }
}

def getStabilityLevel = { version ->
    def v = version.toUpperCase()
    if (v.contains('DEV'))
        return 0
    else if (v.contains('ALPHA'))
        return 1
    else if (v.contains('BETA'))
        return 2
    else if (v.contains('RC'))
        return 3
    else
        return 4
}

dependencyUpdates {
    rejectVersionIf {
        def candidateStability = getStabilityLevel(it.candidate.version)
        def currentStability = getStabilityLevel(it.currentVersion)
        println "current: ${it.currentVersion}-$currentStability"
        println "candidate: ${it.candidate.version}-$candidateStability"
        candidateStability < currentStability
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}